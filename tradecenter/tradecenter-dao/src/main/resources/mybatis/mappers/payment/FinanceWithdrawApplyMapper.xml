<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.camelot.payment.dao.FinanceWithdrawApplyDAO">
	<resultMap id="financeWithdrawApplyMapper" type="financeWithdrawApply">
			<result property="id" column="id" />
			<result property="tradeNo" column="trade_no" />
			<result property="userId" column="user_id" />
			<result property="userName" column="user_name" />
			<result property="amount" column="amount" />
			<result property="content" column="content" />
			<result property="status" column="status" />
			<result property="createdTime" column="created_time" />
			<result property="modifiedTime" column="modified_time" />
	</resultMap>

	<sql id="count_Tail">
		select count(1) from finance_withdraw_apply record
	</sql>

	<sql id="pagination_tail">
	  limit #{page.pageOffset} , #{page.rows}
	</sql>

	<sql id="selectAllColumns">
		<![CDATA[
		SELECT
			 id, 
			 trade_no, 
			 user_id, 
			 user_name, 
			 amount, 
			 content, 
			 status, 
			 created_time, 
		 	 modified_time
			FROM finance_withdraw_apply record
		]]>
	</sql>

	<sql id="where_fragement">
		where 1=1
		<if test="entity!=null">
			<if test = "entity.tradeNo != null and entity.tradeNo != ''">
				<![CDATA[ and record.trade_no  = #{entity.tradeNo} ]]>
			</if>
			<if test = "entity.userId != null and entity.userId != ''">
				<![CDATA[ and record.user_id  = #{entity.userId} ]]>
			</if>
			<if test = "entity.status != null and entity.status != ''">
				<![CDATA[ and record.status  = #{entity.status} ]]>
			</if>
			
			<if test="entity.createdBegin != null  and entity.createdBegin !=''">
				<![CDATA[ and record.created_time >DATE_FORMAT(#{entity.createdBegin},'%Y-%m-%d') ]]>
			</if>
			<if test="entity.createdEnd != null  and entity.createdEnd !=''">
				<![CDATA[ and record.created_time <DATE_FORMAT(#{entity.createdEnd},'%Y-%m-%d')]]>
			</if>
		</if>
	</sql>

	<insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="financeWithdrawApply">
		insert into finance_withdraw_apply(
				trade_no,
				user_id,
				user_name,
				amount,
				status,
				created_time
		)values(
				#{tradeNo},
				#{userId},
				#{userName},
				#{amount},
				#{status},
				now()
		)
	</insert>
	
	<update id="update">
		update finance_withdraw_apply record set record.modified_time = now()
			<if test = "content != null and content != ''">
				,record.content = #{content}
			</if>
			<if test = "status != null and status != ''">
				,record.status = #{status}
			</if>
		where id = #{id}
	</update>
	
	<select id="getWithdrawNo" resultType="String">
		SELECT get_withdraw_no()
	</select>
	
	<select id="queryCount" resultType="long">
		<include refid="count_Tail"></include>
		<include refid="where_fragement"></include>
	</select>
	
	<select id="queryList" resultMap="financeWithdrawApplyMapper" >
		<include refid="selectAllColumns"/>
		<include refid="where_fragement" />
		<if test="page!=null">
			<include refid="pagination_tail" />
		</if>
	</select>
</mapper>